name: CI Workflow

# This workflow runs on both pull requests and pushes to the master branch.
on:
  pull_request:
  push:
    branches: [ master ]

# Concurrency settings to manage workflow execution.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

# Jobs section begins.
jobs:
  # Build and Test job.
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version-file: .python-version

      - name: Install dependencies
        run: |
          # install dependencies
          python -m pip install --upgrade pip
          pip install -U pip wheel setuptools
          pip install -r requirements.txt

      - name: Check
        id: check
        run: |
          make check

      - name: Unit Test with pytest
        id: unit_test
        run: |
          pytest -v -s tests/unit --no-header -vv --cov=dags --cov-report=xml --cov-report=term-missing

      - name: Prepare Integration Tests Environment
        id: setup-environment
        run: |
          export OPERATIONAL_DB_URL="postgresql://myuser:mypassword@localhost:5433/mydatabase"
          echo "Initializing pg database"
          docker compose -f docker-compose-test.yaml up -d --wait

      - name: Integration Test with pytest
        id: integration-tests
        run: |  
          pytest -s -v tests/integration 

      - name: Cleanup Integration Tests Environment
        id: cleanup-environment
        run: |
          echo "Docker compose down"
          docker-compose -f docker-compose-test.yaml down -v
          
          echo "Clearing caches"
          make clear

